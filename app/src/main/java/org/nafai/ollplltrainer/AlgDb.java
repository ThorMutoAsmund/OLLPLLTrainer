package org.nafai.ollplltrainer;

import java.util.ArrayList;

/**
 * Created by thora_000 on 19/12/2017.
 */

public class AlgDb {
    public static AlgDb Instance = new AlgDb();

    public ArrayList<Alg> OLLs;

    public ArrayList<AlgGroup> OLLGroups;

    public ArrayList<String> OLLIds;

    public ArrayList<Alg> PLLs;

    public ArrayList<AlgGroup> PLLGroups;

    public ArrayList<String> PLLIds;

    private AlgDb() {
        this.OLLs = new ArrayList<Alg>();
        this.OLLGroups = new ArrayList<AlgGroup>();
        this.PLLs = new ArrayList<Alg>();
        this.PLLGroups = new ArrayList<AlgGroup>();

        AddOLLs();
        AddOLLGroups();
        AddPLLs();
        AddPLLGroups();

        this.OLLIds = GetIds(this.OLLs);
        this.PLLIds = GetIds(this.PLLs);
    }

    public Alg FindAlg(ArrayList<Alg> algs, String id) {
        for (Alg alg : algs) {
            if (alg.Id == id) {
                return alg;
            }
        }

        return null;
    }

    private ArrayList<String> GetIds(ArrayList<Alg> algs) {
        ArrayList<String> ids = new ArrayList<String>();
        for (Alg alg : algs) {
            ids.add(alg.Id);
        }

        return ids;
    }

    private void AddOLLs() {
        AddAlg(this.OLLs,"27",
                "S, Sune, Swimming Left",
                "OCLL, OLL",
                "(U L U' R') (U L' U' R)",
                "R U R' U R U2 R'",
                "y' R' U2 R U R' U R",
                "y L' U2 L U L' U L",
                "y2 L U L' U L U2 L'",
                "R U' L' U R' U' L",
                "U2 r2 U R' U' L' U R U' r' (x')",
                "y' U R U' L' U R' U' L");

        AddAlg(this.OLLs,"26",
                "-S, Antisune, Swimming Right",
                "OCLL, OLL",
                "(R' U L U') (R U L')",
                "y2 R' U' R U' R' U2 R",
                "y' R U2 R' U' R U' R'",
                "y L U2 L' U' L U' L'",
                "L' U' L U' L' U2 L",
                "L' U R U' L U R'",
                "y' L' U R U' L U R'",
                "y' R U2 R' U2' R' F R2 U' R' U' R U R' F'");

        AddAlg(this.OLLs,"21",
                "H, Double Sune, Flip, Cross",
                "OCLL, OLL",
                "R U R' U R U' R' U R U2 R'",
                "y R U2 R' U' R U R' U' R U' R'",
                "y F (R U R' U')3 F'",
                "y F (U R U' R')3 F'",
                "y F' (L' U' L U)3 F",
                "R' U' R U' R' U R U' R' U2 R",
                "L U L' U L U' L' U L U2 L'",
                "y L' U2 L U L' U' L U L' U L",
                "y (R' U R U) (R' U R U') (R' U R U') R' U' R U2 R' U R",
                "L' U2 M' (y) R U2 R U2 R' U2 (y') l");

        AddAlg(this.OLLs,"22",
                "Pi, Bruno, Wheel, T-shirt",
                "OCLL, OLL",
                "R U2 R2' U' R2 U' R2' U2 R",
                "f (R U R' U') f' F (R U R' U') F'",
                "y2 f' (L' U' L U) f F' (L' U' L U) F",
                "y2 L' U2 L2 U L2 U L2 U2 L'",
                "R U2 R2 U' R' U R U' R U' R' y M' U2 M",
                "R' U L U' R U' L' U' L U' L'",
                "y2 L U' R' U L' U R U R' U R",
                "y2 L' U R U' L U' R' U' R U' R'",
                "R U' L' U R' U L U L' U L",
                "R U R' U R U2 R' y' R U R' U R U2 R'",
                "R U R' U' R' F R2 U R' U' R U R' U' F'",
                "(R' U L U' R U L') U2 (R' U L U' R U L')");

        AddAlg(this.OLLs,"23",
                "U, Headlights, Superman",
                "OCLL, OLL",
                "R2' D' R U2 R' D R U2 R",
                "R' U2 R F U' R' U' R U F'",
                "F R U' R' U R U R' U R U' R' F'",
                "(y') R U R' U' (R U' R' U2) (R U' R' U2) R U R'",
                "(R' U' R U') R' U2 R2 U (R' U R U2 R')",
                "R' U L' U R U' L U2 R' U R",
                "F (R U R' U') (R' F R F2) (L' U2 L)",
                "L2 D L' U2 L D' L' U2 L'",
                "l2 U' R D2 R' U R D2 R",
                "l2' U' z' U R2 U' L U R2 z' L",
                "(y2) R' F2 R U2 R U2 R' F2 R U2 R'",
                "(y2) R2 D R' U2 R D' R' U2 R'",
                "R2' B2 R F2' R' B2 R F2' R",
                "(y2) R d' R' U R d R' (y) R' U2 R",
                "(x) R' B2' (R U' R' U) B2' (U' R U)",
                "(y2)R U R' U R U2 R2' U' R U' R' U2' R",
                "(R U R' U')3 (R' F R F')3");

        AddAlg(this.OLLs,"24",
                "T, Chameleon, Shark, Hammerhead, Little Horse, Stingray",
                "OCLL, OLL",
                "L F R' F' L' F R F'",
                "r U R' U' L' U R U' x'",
                "r U R' U' r' F R F'",
                "(y' x') R U R' D R U' R' D'",
                "(y') F R U R' U' R U' R' U' R U R' F'",
                "R U R2' U' R2 U' R2' U2' R U' R U' R'",
                "(y') R U' R' (U2 R U R') (U2 R U R') (U R U' R')",
                "(y x) D' R' U R D R' U' R x'",
                "(y x) D L U' L' D' L U L' x'",
                "(y x') U' R' D R U R' D' R x",
                "(y2) R' F' L F R F' L' F",
                "(y2) R' F' r U R U' r' F",
                "(y2) l' U' L U R U' r' F",
                "(y') l U l' F R B' R' F'",
                "R U' R' F R U R' U' R' F' R2 U' R' U2 R U' R'",
                "(y) R U R D R' U' R D' R2",
                "(y') R' U' R' D' R U R' D R2");

        AddAlg(this.OLLs,"25",
                "L, Bowtie, Triple-Sune, Side-winder, Diagonals, Spaceship",
                "OCLL, OLL",
                "R U2 R' U' (R U R' U') (R U R' U') R U' R'",
                "R U R' U (R U' R' U) (R U' R' U) R U2 R'",
                "y2 R' F R B' R' F' R B",
                "y2 F R' F' L F R F' L'",
                "y F' L F R' F' L' F R",
                "y' F' r U R' U' r' F R",
                "y' x U R' U' L U R U' r'",
                "R' F' L' F R F' L F",
                "y R' U' (R U R' F') (R U R' U') (R' F R2)",
                "y2 R U2' R D R' U2 R D' R2'",
                "y2 F R' F' r U R U' r'",
                "y2 l' U R D' R' U' R D x'",
                "x' D R U R' D' R U' l'",
                "x' U L' U' R U L U' l'",
                "x' R' D R U' R' D' R U x",
                "x R' U R D' R' U' R D x'",
                "y2 x L U' L' D L U L' D' x'",
                "l' U' L' U R U' L U x'",
                "U r U R U' L' U R' U' x'",
                "y2 L' R U R' U' L U R U' R'",
                "F R B R' F' l U' l'",
                "U R U2 R' L' U' L U' R U' R' L' U2 L",
                "F R U' R' U' R U2 R' U' F'",
                "y R U R' U' R' F R U R U' R' F'",
                "y' R U (R U R' U') (R' F) (R2 U') (R' U' R U) (R' F') U' R'",
                "x U R' U' r x' U R U' r'",
                "y' R2 D R' U R D' R' U' R'",
                "R2 D' R U' R' D R U R",
                "(y') R2 D R' U R D' R' U' R'");

        AddAlg(this.OLLs,"1",
                "Runway, Blank",
                "OLL",
                "(R U2) (R2' F R F' U2') (R' F R F')",
                "R U B' R B R2 U' R' F R F'",
                "(y) S U F R2 U' R2 U' R2 U R2 f'",
                "L' U2 L2 F' L' F U2 L F' L' F",
                "(y) R U' R2 D' r U' r' D R2 U R'");

        AddAlg(this.OLLs,"2",
                "Zamboni",
                "OLL",
                "F (R U R' U') F' f (R U R' U') f'",
                "F (R U R' U') S (R U R' U') f'",
                "(y2) F' (L' U' L U) F f' (L' U' L U) f",
                "(y) r U r' U2 r U2 R' U2 R U' r'",
                "(y) l' U' l U2 l' U2 L U2 L' U l",
                "(y2) F R' F' R U R2 B' R' B U' R'",
                "(y2) (F R' F' R) U2 F R' F' R2 U2 R'");

        AddAlg(this.OLLs,"3",
                "Anti-Nazi, Anti-Mouse",
                "OLL",
                "(y) f (R U R' U') f' U' F (R U R' U') F'",
                "(y2) r' R2 U R' U r U2 r' U R' r",
                "(y2) M U l' U2 l U L' U L M'",
                "(y2) r' R2 U R' U r U2 r' U M'",
                "(M'U) (r'U2 r U) (R' U R2 r')");

        AddAlg(this.OLLs,"4",
                "Nazi, Mouse",
                "OLL",
                "f (R U R' U') f' U F (R U R' U') F'",
                "R' U2 x R' U R U' y R' U' R' U R' F",
                "(y) r' R U' r U2 r' U' R U' R2' r",
                "(y) M U' r U2' r' U' R U' R' M'",
                "l L2 U' L U' l' U2 l U' M'");

        AddAlg(this.OLLs,"17",
                "Slash, Diagonal",
                "OLL",
                "R U R' U (R' F R F') U2 (R' F R F')",
                "f (R U R' U') y' r' (R U R' U') R' F R F'",
                "F R' F' l R L' U R U' R' U' M'",
                "F' R U2 r' U F2 U' r U2 R' F",
                "(F' R U2 r' d) R2 U' F R2 f' R",
                "(y2) (F R' F' R2 r' U) (R U' R' U' M')");

        AddAlg(this.OLLs,"18",
                "Crown",
                "OLL",
                "(y') r U R' U R U2 r2' U' R U' R' U2 r",
                "(y) F R U R' d R' U2 R' F R F'",
                "R U2 R2 F R F' U2 M' U R U' r'",
                "l' U' r' U2 L U2 L' U2 r U l",
                "(y2) (R' F R F') U2 (R' F R F') (U F' U F)",
                "(y) (F R' F' R) U2 (F R' F' R)(U' R U' R')",
                "(y) x (U R' U' R) B2 (U R' U' R)(B' R B' R') x'",
                "(y2) (F R U' R' U' R U R' F') U' (F R U R' U' F')",
                "(y') (M' U M U2 M' U M) U (f R U R' U' f')");

        AddAlg(this.OLLs,"19",
                "Bunny",
                "OLL",
                "r' R U R U R' U' r R2' F R F'",
                "M U R U R' U' M' R' F R F'",
                "M U R U R' U' r R2' F R F'",
                "r' U2 R U R' U r2 U2' R' U' R U' r'",
                "R' U2 F R U R' U' y' R2 U2 R B",
                "(y2) M' U' R' U' R U r' R2 B' R' B",
                "(y2) M' U L U L' U' l L2 B L B'");

        AddAlg(this.OLLs,"31",
                "Couch",
                "OLL",
                "(y2) R' U' F U R U' R' F' R",
                "(y) (F R' F' R) (U R U R') (U' R U' R')",
                "L' d' R d L U' L' B' L",
                "S' L' U' L U L F' L' f",
                "(y) x U R' U' l U R U R' U' R U' R'",
                "L' U' B U L U' L' B' L",
                "(y') (S R U R' U' Fw' U' F)",
                "(y) M' U' L' U' L F U F' L' U l",
                "(y2) (L' U' L U) (R U R' U') M' U' L' U2 R U' (x')");

        AddAlg(this.OLLs,"32",
                "Anti-Couch",
                "OLL",
                "R U B' U' R' U R B R'",
                "(y2) x' R U R' D R U' R U' R' U R' D' x",
                "(y2) F U R U' F' r U R' U' r'",
                "R U x' U' F' R' F R U R'",
                "R d L' d' R' U R B R'",
                "S R U R' U' R' F R f'",
                "(y) x' U' R U l' U' R' U' R U R' U R",
                "R U2 R' U' F' U F R U' R'",
                "l F U' F' R' F R U l'",
                "(y) M' U R U R' F' U' F R U' r'",
                "(y2) L U F' U' L' U L F L'",
                "(y2) (R U R' U') (L' U' L U) M' U R U2 L' U x'");

        AddAlg(this.OLLs,"43",
                "Anti-P",
                "OLL",
                "(y) R' U' F' U F R",
                "f' L' U' L U f",
                "B' U' R' U R B",
                "(y2) F' U' L' U L F",
                "(y2) U R U R' F' L' U' L F",
                "(y2) R' U' F R' F' R U R",
                "(y') R U l' U' r' U' r U x'");

        AddAlg(this.OLLs,"44",
                "P",
                "OLL",
                "f (R U R' U') f'",
                "(y2) F U R U' R' F'",
                "(y) R U y' L U' L' B'",
                "(y) F U R' F R F' U' F'");

        AddAlg(this.OLLs,"36",
                "Sea-Mew, Wario, Anti-Moustache",
                "OLL",
                "R' U' R U' R' U R U R y R' F' R",
                "R' U' R U' R' U R U R B' R' B",
                "(y2) (L' U' L U') (L' U L U) (L F' L' F)",
                "(R U R' U') y (L' U2' L U) y' (R U R')",
                "(R U R' U' F') (U2' F U) (R U R')",
                "R U' R' U' F (U R U' R') F' R U2 R'",
                "(y2) (F R' F' R) U (R U R' U')2 R U' R'");

        AddAlg(this.OLLs,"38",
                "Mario, Moustache",
                "OLL",
                "(y2) (R U R' U) (R U' R' U') (R' F R F')",
                "L U L' U L U' L' U' L' B L B'",
                "(L' U' L U) y' (R U2 R' U') y (L' U' L)");

        AddAlg(this.OLLs,"48",
                "Breakneck",
                "OLL",
                "F (R U R' U') (R U R' U') F'",
                "(y2) f U R U' R' U R U' R' f'",
                "(y) r U2 R' U' R U' r' R' U' R U' R' U2 R",
                "(y') r' U' R U' R' U2 r R U2 R' U' R U' R'");

        AddAlg(this.OLLs,"47",
                "Anti-Breakneck",
                "OLL",
                "F' (L' U' L U) (L' U' L U) F",
                "(y') r U R' U R U2 r' R' U2 R U R' U R",
                "R' U' x (R' U R U')2 x' U R");

        AddAlg(this.OLLs,"53",
                "Frying Pan",
                "OLL",
                "l' U' L U' L' U L U' L' U2 l",
                "(y2) r' U' R U' R' U R U' R' U2 r",
                "(y') r' U2 R U R' U' R U R' U r",
                "(y') r U2 R' U' R U' r' R U2 R' U' R U' R'",
                "r U R' U R U2 r' R U R' U R U2 R'",
                "F R U R' U' F' R U R' U' R' F R F'");

        AddAlg(this.OLLs,"54",
                "Anti-Frying Pan",
                "OLL",
                "r U R' U R U' R' U R U2 r'",
                "(y') r U2 R' U' R U R' U' R U' r'",
                "(y2) l U L' U L U' L' U L U2 l'",
                "(y2) r' U' R U' R' U2 r R' U' R U' R' U2 R",
                "(y) r' U2 R U R' U r R' U2 R U R' U R",
                "(y) f (R U R' U') (R U R' U') f' F (R U R' U') F'",
                "(y') r U2 R' U' R U R' U' R U' r'");

        AddAlg(this.OLLs,"49",
                "Right back squeezy",
                "OLL",
                "R B' R2 F R2 B R2 F' R",
                "l U' l2' U l2 U l2' U' l",
                "(y2) r U' r2 U r2 U r2 U' r",
                "(y2) R' F R' F' R2 d2 y' R' F R F'",
                "(y2) r U2 R2' U' R2 U' r'R' U2 R",
                "(y') x' U l' U2 R U2 l U2 R' U x",
                "(y') R' U2 R U R' U R F R U R' U' F'");

        AddAlg(this.OLLs,"50",
                "Right front squeezy",
                "OLL",
                "(y2) R' F R2 B' R2 F' R2 B R'",
                "(y2) (r U R U' r') (F R' U R U' R' F')",
                "(y2) x' R' D R2 U' R2 D' R2 U R' x",
                "r' U r2 U' r2' U' r2 U r'",
                "R B' R B R2' U2 F R' F' R",
                "(y2) l' U l2 U' l2 U' l2 U l'",
                "r' U2 R2' U R2 U rR U2 R'",
                "(y') (R U2 R' U' R U' R') (F R U R' U' F')",
                "(y') F' R U2 R' U2 R' F2 R F'",
                "(y) x' U' r U2 L' U2 r' U2 L U' x",
                "(y') F R U' R' U' R U R' U R U' R' F'");

        AddAlg(this.OLLs,"34",
                "City (C and T)",
                "OLL",
                "(R U R' U') x D' R' U R E' z'",
                "(y2) R' U' R U y' x' R U L' U' M'",
                "R U R' U' y' r' U' R U M'",
                "(R U R' U') B' l' U R d' D",
                "(R U R' U') B' (R' F R F') B",
                "R U R' d' l' U' L U r' R",
                "R U R2 U' R' F R U R U' F'",
                "(y2) F R U R' U' R' F' r U R U' r'",
                "(y2) R U2 R' F R U R' U' F' U R U R'",
                "(R U R' U') y l' U' L U M");

        AddAlg(this.OLLs,"46",
                "Seein' Headlights (C and headlights)",
                "OLL",
                "R' U' R' F R F' U R",
                "R' U' l' U l F' U R",
                "(y) F U F l' U' l U' F'",
                "R U l U' R' U F' l'",
                "(y2) L F U' R U R' F' L'");

        AddAlg(this.OLLs,"33",
                "Tying Shoelaces, Key",
                "OLL",
                "(R U R' U') (R' F R F')",
                "(y2) (L' U' L U) (L F' L' F)",
                "R' U' R U l U' R' U x",
                "R U R' F' U' F R U' R'");

        AddAlg(this.OLLs,"45",
                "Suit up, T",
                "OLL",
                "F (R U R' U') F'",
                "f' (U' L' U L) f",
                "(y2) f (U R U' R') f'",
                "(y2) F' (L' U' L U) F");

        AddAlg(this.OLLs,"55",
                "Highway, Freeway",
                "OLL",
                "(y) R' F (R U R U') R2 F' R2 U' R' (U R U R')",
                "R U2 R2 U' R U' R' U2 F R F'",
                "R' U2 R2 U R' U R U2 y l' U' l",
                "r U2 R2 F R F' U2 r' F R F'",
                "(y) F U' R2 D R' U2 R D' R2' U F'",
                "(y) R' F R U R' F R U' R' F' R U M' U' M",
                "L F' L' U' L F' L' U L F L' U' M' U M",
                "(L F' L' U' L F' L' U L F L' U' L)(R' F R) L'",
                "R d' R2 D R' U2 R D' R2 d R'",
                "(y) r U2 R' U' R2 r' U R' U' r U' r'",
                "(y) r U2 R' U' M (R U R' U') r U' r'",
                "(y) (F R U R' U' F') R U2 R2 U' R2 U' R2 U2 R",
                "(y) r U2 R' U' M (R U R' U') r U' r'",
                "(y) F (R U R' U') S (R U R' U') S' (R U R' U') F'",
                "R' U' (F R' F' R) F (U R U' R') F' R");

        AddAlg(this.OLLs,"56",
                "Streetlights, Dead Man",
                "OLL",
                "r U r' U R U' R' U R U' R' r U' r'",
                "r' U' r U' R' U R U' R' U R r' U r",
                "L F L' U R U' R' U R U' R' L F' L'",
                "F R U R' U' R F' r U R' U' r'",
                "r U r' U R U' R' M' U R U2 r'",
                "F R U R' U' F' r U R' U' r' F R F'",
                "l U l' (U L U' L')2 l U' l'");

        AddAlg(this.OLLs,"51",
                "Bottlecap, Ant",
                "OLL",
                "F U R U' R' U R U' R' F'",
                "(y2) f R U R' U' R U R' U' f'",
                "(y') R' U2 R U R' F R' F' R U R");

        AddAlg(this.OLLs,"52",
                "Rice Cooker",
                "OLL",
                "R' U' R U' R' d R' U R B",
                "R U R' U R d' R U' R' F'",
                "R' U' R U' R' U F' U F R",
                "(y2) R' U' x U R' U' R U R' U' R x' U R",
                "(R U R' U R U2 R') U (F U R U' R' F')",
                "(y) (r U2 R' U' R U' r') (F R U R' U' F')",
                "(y') F R U R' U F' U' F U' F'");

        AddAlg(this.OLLs,"5",
                "Right back wide antisune (RBWAS), Lefty Square",
                "OLL",
                "(r' U2) (R U R' U r)",
                "(y2) R' F2 L F L' F R",
                "(y2) l' U2 L U L' U l",
                "(y) x' U' l2 U l F' l U");

        AddAlg(this.OLLs,"6",
                "Right front wide antisune (RFWAS), Righty Square",
                "OLL",
                "(y2) r U2 R' U' R U' r'",
                "l U2 L' U' L U' l'");

        AddAlg(this.OLLs,"39",
                "Fung",
                "OLL",
                "L F' (L' U' L U) F U' L'",
                "(y2) l U' l' U' R U B U' R'",
                "(y2) f' L F L' U' L' U L S",
                "(y2) R U R' F' U' F U R U2 R'",
                "(y2) R B' R' U' R U B U' R'",
                "(y2) x' R U' x R' U' R U x' U F' l'",
                "(y2) F R U R' U' R U R' U' R U' R' U' R U R' F'");

        AddAlg(this.OLLs,"40",
                "Anti-Fung",
                "OLL",
                "R' F (R U R' U') F' U R",
                "(y2) f R' F' R U R U' R' S'",
                "(y2) L' B L U L' U' B' U L");

        AddAlg(this.OLLs,"7",
                "Lightning, Wide Sune",
                "OLL",
                "r U R' U R U2 r'",
                "(y) B L F' L F L2 B'",
                "F R' F' R U2 R U2 R'",
                "L' U2 L U2 L F' L' F");

        AddAlg(this.OLLs,"8",
                "Left Wide Sune (LWS), Reverse Lightning",
                "OLL",
                "l' U' L U' L' U2 l",
                "(y2) r' U' R U' R' U2 r",
                "(y') B' R' F R' F' R2 B",
                "R U2 R' U2 R' F R F'");

        AddAlg(this.OLLs,"11",
                "Downstairs",
                "OLL",
                "F' (L' U' L U) F y F (R U R' U') F'",
                "R U' R' U' R U' R' U2 F' U F U' R U R'",
                "(y) r U R' U R' F R F' R U2 r'",
                "(y') r' R2 U R' U R U2 R' U M'");

        AddAlg(this.OLLs,"12",
                "Upstairs",
                "OLL",
                "F (R U R' U') F' U F (R U R' U') F'",
                "(y) F R U R2 F R y' R2 U R U2 R'",
                "(y') r R2' U' R U' R' U2 R U' R r'",
                "(y') M' R' U' R U' R' U2 R U' M");

        AddAlg(this.OLLs,"9",
                "Kite",
                "OLL",
                "(y') (R U R' U') R' F R2 U R' U' F'",
                "(y') R' U' R y r U' r' U r U r'",
                "(y') R' U' R y' x' R U' R' F R U R' x",
                "(y) L' U' L y l U' l' U l U l'",
                "R' U' R U' R' U R' F R F' U R",
                "(y2) R U2 R' M' U' R U' R' U M");

        AddAlg(this.OLLs,"10",
                "Anti-Kite",
                "OLL",
                "(y') R U R' y R' F R U' R' F' R",
                "(y') R U R' y' r' U r U' r' U' r",
                "(y') (R U R' U) (R' F R F') R U2 R'",
                "(y') (R' U' R U) R B' R2 U' R U B",
                "(R' M' U2) (R U R' U) (R U R r')");

        AddAlg(this.OLLs,"35",
                "Fish Salad",
                "OLL",
                "R U2 R2' F R F' R U2 R'",
                "R U B' R B R2 U R U2 R'",
                "U' M2 F' U2 F M U2 R U L' x'",
                "U' S2 L U2 L' S' U2 B' U' F z'",
                "(y') R' U2 (R l) U' R' U l' U2 R",
                "(y) R2 D r' U r D' r' U' R' U M'",
                "f (R U R' U') f' (R U R' U R U2 R')");

        AddAlg(this.OLLs,"37",
                "Mounted Fish, Untying Shoelaces",
                "OLL",
                "(y) F R U' R' U' R U R' F'",
                "(y) R' F R F' U' F' U F",
                "(y) R' F R F' y' U' R' U R",
                "(y) F R' F' R U R U' R'",
                "(y) M' U R U' r' d' L' U L",
                "x' U' R U l' U' R' U R",
                "l U' R' U y' R U R' U' z'",
                "R B' R' B U B U' B'",
                "R U R' F' U F R U' R'",
                "(y') r2 D' r U' r' D r U r",
                "(y2) M' U' L' U l y' U R U' R'");

        AddAlg(this.OLLs,"13",
                "Gun, Trigger",
                "OLL",
                "F U R U' R2 F' R U R U' R'",
                "F U R U2 R' U' R U R' F'",
                "r U' r' U' r U r' y' R' U R",
                "(y2) x' R U' R' F' R U R' x y R' U R",
                "(y2) f R U R2 U' R' U R U' f'",
                "R U2 L' U' L U2 R' U' L F' L' F");

        AddAlg(this.OLLs,"14",
                "Anti-Gun, Anti-Trigger",
                "OLL",
                "R' F R U R' F' R y' R U' R'",
                "l' U l U l' U' l y' R U' R'",
                "(y') R' U' y' R' U R2 B R' U' R' U R",
                "(y2) B' U' R' U R2 B R' U' R' U R",
                "(y2) x' L' U L F L' U' L x y' L U' L'",
                "(y2) r' U r U r' U' r y R U' R'",
                "L' U2 R U R' U2 L U R' F R F'");

        AddAlg(this.OLLs,"15",
                "Squeegee",
                "OLL",
                "(y2) l' U' l (L' U' L U) l' U l",
                "(y2) R' F' R L' U' L U R' F R",
                "r' U' r R' U' R U r' U r");

        AddAlg(this.OLLs,"16",
                "Anti-Squeegee",
                "OLL",
                "(y2) r U r' (R U R' U') r U' r'",
                "(y2) r U M U R' U' r U' r'",
                "l U l' L U L' U' l U' l'");

        AddAlg(this.OLLs,"29",
                "Spotted Chameleon",
                "OLL",
                "M U (R U R' U') (R' F R F') M'",
                "r2 D' r U r' D r2 U' r' U' r",
                "(y) (R U R' U') (R U' R' F') U' (F R U R')",
                "(y) R' U2 R2 U R' U' R' U2 F R F'",
                "(y2) R' F R F' R U2 R' d' L' U' L",
                "(y2) R' F R F' R U2 R' U' y' R' U' R",
                "(y2) R2' U' R F R' U R2' U' R' F' R",
                "(y2) r U2 R' U' R U' r' R' U2 R U R' U R",
                "x' U' R' U L' U' R2 U' R' U2 r",
                "(y') (R U R' U R U2 R') U (R U R' U') (R' F R F')");

        AddAlg(this.OLLs,"30",
                "Anti-Spotted Chameleon",
                "OLL",
                "r' U2 R U R' U r R U2 R' U' R U' R'",
                "f R U R2 U' R' U R2 U' R' f'",
                "R2' U R' B' R U' R2' U R B R'",
                "M U' (L' U' L U) (L F' L' F) M'",
                "l U' R' U l' U2 R d L U L'",
                "R B' R' B R' U2 R U y R U R'",
                "(y2) F U (R U2 R' U')2 F'",
                "(y2) (L F' L' F) L' U2 L d (R U R')",
                "(y2) F' L U L2 U L2 U2 L' U F",
                "(y2) F R' F R2 U' R' U' R U R' F2",
                "(y2) F U R U' x' U R' D' R U' l'",
                "(y2) M' U' (R' U' R U) x' (R U' R' U) M x",
                "(y2) M' U' (R' U' R U) l (U' R' U R) L'",
                "(y') M' U R U' r' U2 R2 B' R' B R'",
                "(y') (R' U' R U' R' U2 R) U' (R U R' U') (R' F R F')",
                "(y2) r2 D r' U' r D' r2' U r U r'",
                "(y') r' D' r U' r' D r2 U' r' U r U r'",
                "(y2) r' D' r U r' D r U' r U R' U' M");

        AddAlg(this.OLLs,"41",
                "Awkward Fish, Dalmation",
                "OLL",
                "R U' R' U2 R U y R U' R' y' U' R'",
                "(y) R U2' R' U' R U' R2 y L' U' L U F",
                "(y2) F U R U' R' F' R' U2 R U R' U R",
                "(y2) (R U R' U R U2 R') F (R U R' U') F'",
                "(y2) r R2 y' R' U' R U y R U' M",
                "(y2) R2 L z' l' U' R d L U' L l'",
                "(y2) M' R' F' U' F U R U' M",
                "R' M2 U' F' U F r U' M'",
                "(y) (R B' R' B)2 R' U' R U R' U' R",
                "(y') r U2 R' U' R U' r' U' R U R' U R U2 R'");

        AddAlg(this.OLLs,"42",
                "Lefty Awkward Fish, Anti-Dalmation",
                "OLL",
                "r' R2 y R U R' U' y' R' U M'",
                "R' U' R U F R U R' U' R' U R U' F'",
                "L' U L U2 L' U' y' L' U L U F",
                "(y) R' U2 R U R' U R2 y R U R' U' F'",
                "(y) (R' F R F')2 R U R' U' R U R'",
                "(y2) L2 R' z r U L' d' R' U R' r",
                "(y2) M' U f U R U' R' f' M",
                "(M R) (f R f') (U' R' U M')",
                "(M U) (F R U R' U' F') M'",
                "(R' U' R U' R' U2 R) F (R U R' U') F'",
                "All Corners Oriented");

        AddAlg(this.OLLs,"28",
                "Stealth, Arrow, Arrowhead, Fish",
                "OLL",
                "r U R' U' r' R U R U' R'",
                "(y) r U2 R' U' R U' r' R U R' U R U2 R'",
                "r U R' U R U2 r' R U2 R' U' R U' R'",
                "(y) r' U' R U' R' U2 r R' U2 R U R' U R",
                "(y') r' U' R U M' U' R' U R",
                "r' U2 R U R' U r R' U' R U' R' U2 R",
                "F R U R' U' F' U2 F R U R' U' F'",
                "F R U R' U' F2 L' U' L U F",
                "M U M' U2 M U M'",
                "(y) M U' M' U2 M U' M'",
                "U2 M' U M U2 M' U M",
                "(y') M U M2 U M' U2 M U M",
                "M U M U M' U' M U' M U M",
                "M U M' U M U2 M' U' M U' M'",
                "(y) M U' M U' M' U M U M U' M",
                "(y2) M U' M2 U' M' U2 M U' M",
                "(y') M U M' U M U M' U M U M'",
                "(y') M' U' M U M U M U' M U' M' U M2",
                "(y') M2 U M' U2 M U M U M U2 M' U M",
                "(y2) M' U M U' M U' M U M U M' U' M2",
                "M U' M2 U2 M' U' M U2 M U' M U' M'",
                "(y') M' U' F2 M2 U' M U F2 U M2",
                "(y2) M' U F2 M2 U M U' F2 U' M2",
                "R' F R S R' F' R S'",
                "L2 S U' S' U L2 U S U S'",
                "(y) L F' L' S' L F L'S",
                "(y') M U R U R' U' M' U R U' R'",
                "R2 F2 L F L' F2 R F' R");

        AddAlg(this.OLLs,"57",
                "Mummy, H, I, Brick",
                "OLL",
                "R U R' U' M' U R U' r'",
                "M' U' M' U' M' d2 M' U' M' U' M'",
                "M' U M' U M' d2 M' U M' U M'",
                "R U R' U' r R' U R U' r'",
                "x' M' U' R U M U' R' U x",
                "R' U' R U M U' R' U r",
                "M U M U M U2 M' U M' U M'",
                "M' U M' U M' U M' U2 M' U M' U M' U M'",
                "M' U' M' U' M' U2 M U' M U' M",
                "M U M' U' M U M' U M U2 M'",
                "M' U' M U M' U' M U' M' U2 M",
                "M U M2 U2 M U M U2 M U' M' U' M'",
                "M' U' M2 U2 M' U' M' U2 M' U M U M",
                "M2 U' M U M' U M' U' M' U' M' U M",
                "M2 U' M' U M U M U' M U' M U M'",
                "(y) M' U M' U M' U M' U M' U' M' U' M' U' M'",
                "(y) M' U M U M' U M U' M' U' M",
                "(y) M' U' M U' M' U' M U M' U M",
                "(y) M U' M' U' M U' M' U M U M'",
                "(y) M U M' U M U M' U' M U' M'",
                "M U M' U' B2 M U M' U' B2",
                "M' U' M U F2 M' U' M U F2",
                "M2 U' F2 U' M' U M2 F2 U M",
                "F M' F U M2 U2 M2 U F' M F'");

        AddAlg(this.OLLs,"20",
                "X, Checkers",
                "OLL",
                "r' R U R U R' U' r2 R2' U R U' r'",
                "M U R U R' U' M2 U R U' r'",
                "r U R' U' M2 (U R U' R') U' M'",
                "x U R' U' M2 U R U' M' x' U' M'",
                "M' U2 M' U2 M' U M U2 M U2 M",
                "M' U2 M U2 M' U M U2 M' U2 M",
                "M U2 M' U2 M U M' U2 M U2 M' U'",
                "M d r2 U M' U2 M U r2 S'",
                "M U M F R' F' M2 F R F' U'",
                "R2 U2 R' F2 U2 R2 F' R2 U2 F2 R U2 R2 U'",
                "R B U B' R' F2 B D' L' D B' F2",
                "L' R' F' U2 L2 U2 L2 U2 L2 F L R",
                "F2 M F2 M2 U' M2 F2 M' F2 U",
                "F2 M F2 U' M2 U B2 M B2",
                "F' B' R E S R S' R2 E' F B",
                "S' U' S2 U R' U' R' S' R U R",
                "(M U)4 (M' U)4",
                "(M' U)3 M' U' (M' U)3 M'",
                "(M' U)4 y2 (M' U)4");
    }

    private void AddOLLGroups() {
        AddAlgGroup(OLLGroups,"Corners correct, edges flipped",
                "28", "57", "20");
        AddAlgGroup(OLLGroups,"All edges flipped correctly",
                "21", "22", "23", "24", "25", "26", "27");
        AddAlgGroup(OLLGroups,"No edges flipped correctly",
                "1", "2", "3", "4", "17", "18", "19");
        AddAlgGroup(OLLGroups,"T-shapes",
                "33", "45");
        AddAlgGroup(OLLGroups,"P-shapes",
                "31", "32", "43", "44");
        AddAlgGroup(OLLGroups,"W-shapes",
                "36", "38");
        AddAlgGroup(OLLGroups,"L-shapes",
                "47", "48", "49", "50", "53", "54");
        AddAlgGroup(OLLGroups,"Big lightning bolts",
                "39", "40");
        AddAlgGroup(OLLGroups,"C-shapes",
                "34", "46");
        AddAlgGroup(OLLGroups,"Squares",
                "5", "6");
        AddAlgGroup(OLLGroups,"Small lightning bolts",
                "7", "8", "11", "12");
        AddAlgGroup(OLLGroups,"Fish shapes",
                "9", "10", "35", "37");
        AddAlgGroup(OLLGroups,"I-shapes",
                "51", "52", "55", "56");
        AddAlgGroup(OLLGroups,"Knight move shapes",
                "13", "14", "15", "16");
        AddAlgGroup(OLLGroups,"Awkward shapes",
                "29", "30", "41", "42");
    }

    private void AddPLLs() {

        AddAlg(this.PLLs,"H",
                "H-PLL, X-PLL",
                "EPLL, CPLL, PLL, ELL, ZBLL, ZZLL",
                "M2 D S2 D2 S2 D M2",
                "M2' U M2' U2 M2' U M2'",
                "M2' U' M2' U2' M2' U' M2'",
                "M2' U2 M2' U' M2' U2 M2' U",
                "M2' U2 M2' U M2' U2 M2' U'",
                "R2 U2 R U2 R2 U2 R2 U2 R U2 R2",
                "R2' U2 R' U2 R2' U2' R2' U2 R' U2 R2'",
                "R2 U2 R2 U2 R2 U R2 U2 R2 U2 R2",
                "R U2' R' U' R' U' R2 U' R2' U2' R2 U2' R' (U)",
                "L2 U2 L' U2 L2 U2 L2 U2 L' U2 L2",
                "L R U2 L' R' F' B' U2 F B",
                "L R U2 L' R' (y) L' R' U2 L R",
                "(M2' U)6 U2",
                "(M2' U')6 U2",
                "(R' S R u)6",
                "S R U2 R2 U2 R2 U2 R S'",
                "F2 M2' F2 U' F2 M2' F2",
                "(x) U2 M2' U2 B' U2 M2' U2 (x')",
                "L R U2 L' l' U' u' L2 U (z) L",
                "M2' u M2' u2 M2' u M2'",
                "M2' u' M2' u2' M2' u' M2'",
                "z2 (R U R' U' D)30",
                "M2 d S2 d2 S2 d M2");

        AddAlg(this.PLLs,"Ua",
                "U-PLL a",
                "EPLL, PLL, ELL, ZBLL, BLD",
                "B2 U' M U2 M' U' B2",
                "R2 U' R' U' R U R U R U' R",
                "(y2) R U' R U R U R U' R' U' R2",
                "R U R' U R' U' R2 U' R' U R' U R",
                "M2 U M' U2 M U M2",
                "(y2) M2 U M U2 M' U M2",
                "(y') M2 u' M u2 M u' M2",
                "(y) M2 u' M' u2 M' u' M2",
                "(y) R2' U' S' U2 S U' R2'",
                "(y) R2 U' (F B') R2 (F' B) U' R2",
                "(y2) F2 U' (L R') F2 (L' R) U' F2",
                "(y) R2 d' r U2 M U2 R' d R2",
                "(y) R2 d' r U2 M U2 R' d R2",
                "R U R' U' L' U' L U2 R U' R' U' L' U L",
                "(y2)(R U R' U R U2' R') U (L' U' L U' L' U2 L)",
                "R U R' U' L' U' L U2 R U' R' U' L' U L",
                "r U R' U R' U' R2 U' r' U R' U R");

        AddAlg(this.PLLs,"Ub",
                "U-PLL b",
                "EPLL, PLL, ELL, ZBLL, BLD",
                "B2 U M U2 M' U B2",
                "R' U R' U' R' U' R' U R U R2",
                "(y2) R2 U R U R' U' R' U' R' U R'",
                "(y2) L' U L' U' L' U' L' U L U L2",
                "M2 U' M' U2 M U' M2",
                "(y2) M2 U' M U2 M' U' M2",
                "(y2) F2 U R' L F2 R L' U F2",
                "(y') M2 u M' u2 M' u M2",
                "R U' R U R U R' U' R' U' R' U2 R'",
                "(y2) R' U' R U' R U R2 U R U' R U' R'",
                "L' U' L U R U R' U2 L' U L U R U' R'",
                "(z) U2' R U R U' R' U' R' U' R U' (z')",
                "(y2 z) U' R U' R' U' R' U' R U R U2' (z')",
                "(y2) F2 U M' U2 M U F2",
                "(y') r2 u M' u2 M' u r2",
                "(y2) (L' U' L U' L' U2 L) U' (R U R' U R U2' R')",
                "L' U' L U R U R' U2 L' U L U R U' R'",
                "(y) f' (L' U' L U) f F (R U R' U') F'");

        AddAlg(this.PLLs,"Z",
                "Z-PLL",
                "EPLL, PLL, ELL, ZBLL, ZZLL",
                "(M2' U)2 M' (U2 M2' U2) M' U2",
                "M2 U' M (U2 M2 U2) M U M2",
                "(y) (M2' U')2 M' (U2' M2' U2') M'",
                "M2' U2 M' U' M2' U' M2' U' M'",
                "(y) M2' U2 M' U M2' U M2' U M'",
                "M' U' M2' U' M2' U' M' U2 M2'",
                "(y) M' U M2' U M2' U M' U2 M2'",
                "M' U2 M2 U2 M' U' M2 U' M2",
                "M2' U M2' U' E2 M' E2 M'",
                "(y) M2' U' M2' U E2 M' E2 M'",
                "M2' U M' E2 M' E2 U' M2'",
                "M2' U M2' U M2 B2 M2 B2",
                "U R' U' R U' R U R U' R' U R U R2 U' R' U",
                "R' U' R2 U R U R' U' R U R U' R U' R'",
                "R U R' U R' U' R' U R U' R' U' R2 U R",
                "(y) R U R2 U' R' U' R U R' U' R' U R' U R",
                "(x') R U' R' (U D) R' (D U') R' U R D2' (x)",
                "M2' D S2 D' S' M2' S",
                "M2' u M2' D' M S2 M'",
                "(y) F2 M2' F2 M2' U M2' U M2'",
                "(y) M2' U (F2 M2' F2 M2') U' M2'",
                "(y) R2 U R2 U' R2 F2 R2 U' F2 U R2 F2",
                "R' U L' E2 L U' R L' U R' E2 R U' L",
                "R2 U' R2 U R2 (x') U2 R2 F U2 F' R2 U2 (x)",
                "(y') l' U R U' D' R U D' R U' R' D2 (x')",
                "R' U' R' F R F' U R F' U' L' U L F",
                "R' U' R' F R F' U R U' R' U' F' U F R",
                "R U R2 U' R' F R U R U' R U' R' U' R U R' F'",
                "L' U' L2 F (L' U' L' U' L) U2 (L F' L' U' L') U2 L");

        AddAlg(this.PLLs,"Aa",
                "A-PLL a",
                "CPLL, PLL, L3C, L4C, ZBLL, BLD",
                "R' F R' B2 R F' R' B2 R2",
                "(x') R' D R' U2 R D' R' U2 R2 (x)",
                "(x) R' U R' D2 R U' R' D2 R2 (x')",
                "l' U R' D2 R U' R' D2 R2 (x')",
                "l' U R' (z) r2 U R' U' r2 (z) L2' (x')",
                "(y x') R2 u2 r' F' r u2 R' U l'",
                "(y x') R2 D2 R' U' R D2 R' U R'",
                "(y' x) L2 D2 L' U' L D2 L' U L' (x')",
                "(y2 z) F2 R U2 R' U2 F2 L' U2 L U2 (z')",
                "(y z') U2 R U2 R' F2 U2 L' U2 L F2 (z)",
                "R' U2 R2 U' L' U R' U' L U R' U2 R",
                "R U' L' U' L2 U' R2 U L2 U' R2 U2 L U R'",
                "(y') R U R' F' r U R' U' r' F R2 U' R'",
                "(y') r U r' U' r' F r2 U' r' U' r U r' F'",
                "(y) R L D2 R' U' R D2 R' U L'",
                "(y2) L' B L' F2 L B' L' F2 L2",
                "(y') R U R' U' R' F R U R' U' R' F' R U R2 U' R'",
                "(y') R U R' U R2 D' R U' R' D R U R U' R U' R'",
                "L’ U’ L (R U R’ U’) L’ (U R U’ R’) U L");

        AddAlg(this.PLLs,"Ab",
                "A-PLL b",
                "CPLL, PLL, L3C, L4C, ZBLL, BLD",
                "R B' R F2 R' B R F2 R2",
                "(x) R D' R U2 R' D R U2 R2 (x')",
                "(x') R U' R D2 R' U R D2 R2 (x)",
                "(y' x) R2 D2 R U R' D2 R U' R (x')",
                "(y2 x) L U' L D2 L' U L D2 L2 (x')",
                "(y z) U2 L' U2 L F2 U2 R U2 R' F2 (z')",
                "(z') F2 L' U2 L U2 F2 R U2 R' U2 (z)",
                "(y') R' U2 R U' L' U R U' L U R2 U2 R",
                "(z) (U R' D r2 U') (R U r2' U') (D') (z')",
                "(y2) r U' L z' l2 U' L U l2 z' R2",
                "(y') R2 B2 R F R' B2 R F' R",
                "(y' x') R2 U2 R D R' U2 R D' R",
                "(y2) L F' L B2 L' F L B2 L2",
                "(y) R' U' R U' R2 D R' U R D' R' U' R' U R' U R",
                "(y’) L’ U’ (R U R’ U’) L (U R U’ R’) L’ U L");

        AddAlg(this.PLLs,"E",
                "E-PLL",
                "CPLL, PLL, L4C, ZBLL, ZZLL",
                "(y x') (R U' R' D) (R U R' D') (R U R' D) (R U' R' D') (x)",
                "R2 U R' U' (y) (R U R' U')2 R U R' (y') R U' R2'",
                "(x) U R' U' L U R U' r2 U' R U L U' R' U (x)",
                "(y x') R U' R' D R U R' u2 R' U R D R' U' R (x')",
                "(y x') R U' R' D R U R' D2 L' U L D L' U' L (x)",
                "(x) U R' U' L U R U' L' U R U' L U R' U' L' (x')",
                "(x') U' R U L' U' R' U r2 U R' U' r' F R F'",
                "(y) R U R' U R' U' R F' R U R' U' R' F R2 U' R2 U R",
                "L R' U' R U L' U' R' U R r U R' U' r' F R F'",
                "l' U' L' U R U' l U R' U' L U R U' l' U (x')",
                "(y) r' R' U' L D' L' U L R U' R' D R U (x)",
                "(y) l L U R' D R U' R' r' F r D' L' U'",
                "r2 U r2 D (x') (R U' R' U)3 (x) D' r2 U' r2",
                "L' U' L' U R U' L U L (R' l') U' L U R U' L' U (x' y)",
                "R2 U R' (y) (R U' R' U)3 (y') R U' R2",
                "(y' z') R' F R2 U R' B' R U' R2 F' R (z) R B R'",
                "R' U L' D2 L U' R L' U R' D2 R U' L",
                "R B L B' R' (y) R L (y) L B' R' B L' (y') R' L'",
                "l' U' r' F R F' R U R' U' L U R U' R' F",
                "F' R U R' U' L' U R U' l' U R' U' r B R (x2)",
                "(z) U2 R2 F (R U R' U')3 F' R2 U2 (z')",
                "R' D' R U' R' D R U R' D' R U2 R' D R U' R' D' R U R' D R",
                "(y x') R' D R U' R' D' R U2 L D' L' U' L D L' (x)",
                "F R' F' r U R U' r' F R F' r U R' U' r'",
                "(x) R U' R' D R U R' D' R U R' D R U' R' D'",
                "D R' D2 F' D L D' F D2 R D' F' L' F",
                "l' U' L' U R U' L U R' U' L U R U' L' U (x')",
                "(y) R U R D R' U R D' R' U' R D R' U' R D' R2");

        AddAlg(this.PLLs,"F",
                "F-PLL",
                "PLL, ZBLL, ZZLL",
                "(R' U R U') R2 (F' U' F U) (R F R' F') R2 U'",
                "R' U R U' R2 (y') R' U' R U (y x) R U R' U' R2 (x')",
                "(y) R' U' F' R U R' U' R' F R2 U' R' U' R U R' U R",
                "(y’) L U F L' U' L U L F' L2 U L U L' U' L U' L'",
                "L' U2 L' U' F' L' F2 U' F' U F' L F U' L",
                "(y2) R' U2 R' d' R' F' R2 U' R' U R' F R U' F",
                "L B2 F' D2 B R' B' D2 F2 L' F' L B2 L'",
                "(y') F r2 R' U2 r U' r' U2 (x') R2 U' R' U r2 u' (z')",
                "B' U' R' B U B' U' B' R B2 U' B' U' B U B' U B",
                "(y) R' U' F' R U R' U' R' F R2 U' R' U' R U R' U R",
                "L U' L' U L2 F U F' U' L' F' L F L2 U",
                "(y2) R U' R' U R2 (y) R U R' U' (x) U' R' U R U2 (x')",
                "(y' z) R U R' U' R U2 (z' y') R U R' U' (y' x') R' U' R U R2 (x)",
                "R' U2 R' U2 L U' R' U' R' U R U2 L' U2 R U R",
                "L U2 L U2 R' U L U L U' L' U2 R U2 L' U' L'",
                "L R' F2 R' D L' F2 R U' L2 R B2 L2 U",
                "(y2) M U2 r' U l' U2 r U' R2 r U2 R2 (x')",
                "L F R' F' L' F' D2 B' L' B D2 F' R F2",
                "(r U R' U') (z) U' (l' U2 r' U') (r U2 l' U R2) (x)",
                "R B2 D B2 R' B' R B' D2 F L' F' D B2 R'",
                "(y x) U R2 F R2 U' R' U l' U2 L F' L' U (x') R2 U' (x')",
                "B U B' U B U2 B2 U' B U' B' U2 B U F R B' R' F' R B R'",
                "(y) (R U R' U R U2 R2) (U' R U' R' U2 R) U (r U R' U' r' F R F')",
                "F2 B2 D F2 B2 R U R' U' R' F R2 U' R' U' R U R' F B2 D' F2 B2",
                "(y) M2 U M2 (y') (R U R' U' R' F R2 U' R' U' R U R' F') (y) M2 U' M2",
                "R U' F R F' U F' U' F2 R' F' U' R' U2 R'",
                "(y) F U' r U r' U r' F' r2 U' r' U' F' U2 F'");

        AddAlg(this.PLLs,"Ga",
                "G-PLL a",
                "PLL, ZBLL",
                "(y) R2 U (R' U R' U') R U' R2 (D U' R' U) R D'",
                "(y) R2' u (R' U R' U' R) u' R2 (y') R' U R",
                "(y) R2 U (R' U R' U' R) U' R2 D (U' R' U R) D'",
                "(y2) F2' D (R' U R' U' R) D' F2 L' U L",
                "R L U2 R' L' (y') R' U L' U2 R U' L",
                "(R U R' U' R') U F (R U R U' R') F' U R' U2 R",
                "(y) L F2 R (F' L' F U) R' U' (F' L F' L')",
                "(y) R2' S2 U l2' U' l2' u R2 U' r2' F2");

        AddAlg(this.PLLs,"Gb",
                "G-PLL b",
                "PLL, ZBLL",
                "R' U' R (y) R2 u (R' U R U' R) u' R2",
                "(y) F' U' F R2 u (R' U R U' R) u' R2'",
                "R' U' R B2 D (L' U L U' L) D' B2",
                "(y2) L' U' L (y') R2' u (R' U R U' R) u' R2",
                "(y') R' U L' U2 R U' L (y) R L U2 L' R'",
                "R2 D L2 D F2 L D R' D2 L D' R' U2",
                "R' U' R U D' R2 U R' U R U' R U' R2 D	");

        AddAlg(this.PLLs,"Gc",
                "G-PLL c",
                "PLL, ZBLL",
                "(y) R2' u' (R U' R U R') u R2 (y) R U' R'",
                "(y) R2' u' (R U' R U R') u R2 B U' B'",
                "(y) R2' U' (R U' R U R') U R2 (D' U R U' R' D)",
                "(y) R2' D' F U' F U F' D R2 B U' B'",
                "(y2) F2' D' L U' L U L' D F2 R U' R'",
                "L' U' L U L U' F' L' U' L' U L F U' L U2 L'",
                "L' R' U2 L R (y) L U' R U2 L' U R'",
                "B2 L2 U' B2 D B2 D' R2 U M2 F2 (x2)",
                "(y') R2' F2 R U2 R U2 R' F R U R' U' R' F R2",
                "(y') l' U2' L' U l F' U' L U F R' F R",
                "(y) U F2 R2 L2 U' L2 U L2 D' L2 D R2 F2 U'");

        AddAlg(this.PLLs,"Gd",
                "G-PLL d",
                "PLL, ZBLL",
                "(y2) R U R' (y') R2 u' (R U' R' U R') u R2",
                "(y2) R U R' F2 D' (L U' L' U L') D F2",
                "(y2) L U2 L' U F' (L' U' L U L) F U (L' U' L' U L)",
                "(y2) l2 U' L2 U' F2 L' U' R U2 L' U l (x')",
                "(y) L U' R U2 L' U R' (y) R' L' U2 R L",
                "(y) f R f' R2 u' R U' R' U R' u R2",
                "(y') R' F' R F' U' L' U F R' F' L F2 R",
                "(y') R2' F' (R U R U') (R' F' R) (U2' R' U2' R') F2 R2",
                "(y2) (R U R') F2 D' L U' L' U L' D F2 U2");

        AddAlg(this.PLLs,"Ja",
                "J-PLL a, L-perm",
                "PLL, ZBLL, BLD",
                "(B' U F') U2 (B U' B') U2 (F B U')",
                "(y) (R' U L') U2 (R U' R') U2 R L",
                "(y') (L' U R') U2 (L U' L') U2 R L",
                "(y') (L' U R') (z) R2 (U R' U') R2 U D (z')",
                "(y2) F U' R U' R' U' R U R' F' R U R' U' R' F R U F'",
                "B2 R' U' R B2 L' D L' D' L2",
                "(y2) F2 L' U' L F2 R' D R' D' R2",
                "(y2) F2 L' U' L b2 L' U L' U' r2",
                "(y x') R2 u' R' u R2 (x' y') R' U R' U' l2'",
                "(y2 x) U2 r' U' r U2 l' U R' U' l2",
                "(y2) l2 U R U' l U2 r' U r U2 (x')",
                "L' U R' U2 L U' R U L' U R' U2 L U' R",
                "L' U' L F L' U' L U L F' L2 U L U",
                "B2 R2 U' R2 D B2 D' B2 U B2 U'",
                "B2' R2 U' R2' u R2 D' R2' U R2",
                "B2 U' D B2 U' B2 U B2 D' B2 U B2 U'",
                "(y) R2 (U' D) R2' U' R2 U R2' D' R2 U R2'",
                "L' U2 L U L' U2 R U' L U R'",
                "(y2) R' U2 R U R' U2' L U' R U L'",
                "(y2) R' U2 R U R' (z) R2' U R' D R U' (z')",
                "(y2) R' U2' R U R' (z) R2 U R' D R U' (z')",
                "(z) D R' U' R D' R (R U R' U') R2 U (z')",
                "R U' L' U R' U2 L U' L' U2' L",
                "(y2) L U' R' U L' U2 R U' R' U2 R",
                "R' L' U2 L U L' U2 R U' L U",
                "(y2) L' R' U2 R U R' U2 L U' R",
                "R' L' d2 R U R' d2 R U' L",
                "(z) U' D' R2 U R U' R2 (z') R U' L",
                "(y') L' U R' U2 L U' L' U2 L R",
                "(y') L' U R' (z) R2 U R' U' R2 U D (z')",
                "B U' L' B L2 U' L' U' L U L' B' L U L' B'",
                "(y2) F U' R' F R2 U' R' U' R U R' F' R U R' F'",
                "B' U B' R2 F D' F D F2 R2 B2",
                "(y) R' U l' U2 r U' L U r2 F2 R2",
                "R U' L' U R' U2 L U' L' U2 L",
                "(y2) r2 u' R U' R U R' u r2 (y) U' R' U' (R' U R) U2",
                "(y2) r U' r' U' r U r D r' U' r D' r' U2 R' U' M");

        AddAlg(this.PLLs,"Jb",
                "J-PLL b",
                "PLL, ZBLL, BLD",
                "(B U' F) U2 (B' U B) U2 (F' B' U)",
                "(y') (L U' R) U2 (L' U L) U2 R' L'",
                "(y) (R U' L) U2 (R' U R) U2 L' R'",
                "(y) (R U' L) (z') L2 (U' L U) L2 D' U' (z)",
                "R U2 (R' U' R) U2 L' (U R' U') L",
                "B2 (L U L') B2 (R D' R D) R2",
                "(y2) F2 (R U R') F2 (L D' L D) L2",
                "(y2) F2 (R U R') b2 (R U' R U) l2'",
                "(y' x') L2 u L u' L2 (x' y) (L U' L U) r2",
                "(y2 x) U2 l U l' U2 r (U' L U) r2",
                "(y2) r2 (U' L' U) r' U2 l U' l' U2 (x')",
                "R U' L U2 R' U L' U' R U' L U2 R' U L'",
                "R U R' F' R U R' U' R' F R2 U' R' U'",
                "B2 L2 U L2 D' B2 D B2 U' B2 U",
                "B2 L2 U L2 u' L2 D L2 U' L2",
                "B2 U D' B2 U B2 U' B2 D B2 U' B2 U",
                "(y') L2 (U D') L2 U L2 U' L2 D L2 U' L2",
                "R U2 R' U' R U2 L' U R' U' L",
                "(y2) L U2 L' U' L U2' R' U L' U' R",
                "(y2) L U2 L' U' L (z') L2' U' L D' L' U (z)",
                "(y2) L U2' L' U' L (z') L2' U' L D' L' U (z)",
                "(z') D' L U L' D L' (L' U' L U) L2' U' (z)",
                "L' U R U' L U2 R' U R U2' R'",
                "(y2) R' U L U' R U2 L' U L U2 L'",
                "L R U2 R' U' R U2 L' U R' U'",
                "(y2) R L U2 L' U' L U2 R' U L'",
                "L R d2 L' U' L d2 L' U R'",
                "(z') U D L2 U' L' U L2 (z) L' U R'",
                "(y) R U' L U2 R' U R U2 R' L'",
                "(y) R U' L (z') L2 U' L U L2 U' D' (z)",
                "B' U R B' R2 U R U R' U' R B R' U' R B",
                "(y2) F' U L F' L2 U L U L' U' L F L' U' L F",
                "B U' B L2 F' D F' D' F2 L2 B2",
                "(y') L U' r U2 l' U R' U' l2 F2 L2",
                "L' U R U' L U2 R' U R U2 R'",
                "r2 u R' U R' U' R u' r2 (y) U (L U L U' L') U2",
                "R2 U F U F' R2 F U' F' R2 U' R2 U'");

        AddAlg(this.PLLs,"Na",
                "N-PLL a",
                "PLL, ZBLL, ZZLL",
                "(L U' R U2 L' U R')2 U'",
                "(z) (U R' D R2 U' R D')2 (z')",
                "(y z) R' (U R' D R2 U' R D')2 (z')",
                "(R U' L U2 R' U L')2",
                "(z) (D R' U R2 D' R U')2 (z')",
                "(z) U R' D R2 U' R U (z') R' U' R (z) R2 U' R (z') R'",
                "R U' L d2 L' U L R' U' R U2 r' F l'",
                "L U' L' U L F U F' L' U' L F' L F L' U L'",
                "(z) U R' U' R U F R F' U' R' U F' U F U' R U' (z')",
                "(L U' L F') L' F (L' U L) F U' (F' L' U' L U) L'",
                "R U' R' U R B U B' R' U' R B' R B R' U R'",
                "R U' R' U l U F U' R' F' R U' R U l' U R'",
                "R' U R2 B2 U R' B2' R U' B2 R2' U' R U'",
                "F' (R U R' U') R' F R2 F U' (R' U' R U) F' R'",
                "R U R' U (R U R' F' R U R' U' R' F R2 U' R') U2 R U' R'",
                "R U R' B U B' R' B U B' U' B' R B2 U' B' U' R U' R'",
                "L U L' (y') (R U R' F' R U R' U' R' F R2 U' R') (y') U' R U' R'",
                "L2 U2 L' U2 F2 L2 F2 L F2 U2 L2 U2 L F2",
                "(z) U2 R2 U' R2 (y') R2 U2 R2 U R2 (y) R2 U2 R2 d R2 (x')",
                "R U R' U' L U2 L' U' L U2 R' U L' U' R U R U' R'",
                "(R U R' U') L U2 L' U' L (z') L2 U' L D' L' U (L U L' U') (z)",
                "L' U L2 F2 U L' F2 L U' F2 L2 U' L U'",
                "L2 F2 U2 F2 U' F2 L2 U2 L2 U' F2 U2 L2 U'",
                "(L U L' U) (R' U L U') R U2 (L' U L U2) L' (U' L U' L')",
                "F B L' U' L U' (L' U' L F L' U' L U L F' L2 U L) U2 L' U L F' B'");

        AddAlg(this.PLLs,"Nb",
                "N-PLL b",
                "PLL, ZBLL, ZZLL",
                "(R' U L' U2 R U' L)2 U",
                "(z) (D' R U' R2' D R' U)2 (z')",
                "(y' z') L (U' L D' L2 U L' D)2 (z)",
                "(L' U R' U2' L U' R)2",
                "(z) (U' R D' R2' U R' D)2 (z')",
                "(z) U' R D' R2 U R' U' (z') R U R' (z) R2 U R' (z') R",
                "L' U R' d2 R U' L R' U L' U2 l F' r",
                "R' U R U' R' F' U' F R U R' F R' F' R U' R",
                "(z') U' L U L' U' F' L' F U L U' F U' F' U L' U (z)",
                "(R' U R' F) R F' (R U' R') F' U (F R U R' U') R",
                "L' U L U' L' B' U' B L U L' B L' B' L U' L",
                "L' U L U' r' U' F' U L F L' U L' U' r U' L",
                "L U' L2 B2 U' L B2 L' U B2 L2 U L' U",
                "F L' U' L U L F' L2 F' U L U L' U' F L",
                "L' U' L U' (L' U' L F L' U' L U L F' L2 U L) U2 L' U L",
                "L' U' L B' U' B L B' U' B U B L' B2 U B U L' U L",
                "R' U' R (y) (L' U' L F L' U' L U L F' L2 U L) (y) U L' U L",
                "R2 U2 R U2 F2 R2 F2 R' F2 U2 R2 U2 R' F2",
                "(z') U2 L2 U L2 (y) L2 U2 L2 U' L2 (y') L2 U2 L2 d' L2 (x')",
                "L' U' L U R' U2 R U R' U2 L U' R U L' U' L' U L",
                "(L' U' L U) R' U2' R U R' (z) R2 U R' D R U' (R' U' R U) (z')",
                "R U' R2' F2 U' R F2' R' U F2 R2 U R' U",
                "R2 F2 U2 F2 U F2 R2 U2 R2 U F2 U2 R2 U",
                "(R' U' R U') (L U' R' U) L' U2 (R U' R' U2) R (U R' U R)",
                "F' B' R U R' U (R U R' F' R U R' U' R' F R2 U' R') U2 R U' R' F B",
                "R' U' R (y) R U' L' U R' U2 L U' L' U2 L F' U F'");

        AddAlg(this.PLLs,"Ra",
                "R-PLL a",
                "PLL, ZBLL",
                "R U2 R' U2 R B' R' U' R U R B R2 U",
                "R U2 R' U2 R B' R' U' R U l U R2 (x)",
                "(y2 z) U R2 U' R2 U F' U' R' U R U F U2 (z')",
                "(y2) L U2 L' U2 L F' L' U' L U L F L2",
                "(y') R2 B' R' U' R' U R B R' U2 R U2 R'",
                "(y) L2 F' L' U' L' U L F L' U2 L U2 L'",
                "F2 R' F' U' F' U F R F' U2 F U2 F'",
                "(y' x') R2 U' l' U' R' U l U l' U2 R U2 R'",
                "(y') R l U' l' U' R' U l U l' U2 R U2' R'",
                "F2 L2 U F U F' U' F' U' L2 F' U F' U'",
                "R U' R F2 U R U R U' R' U' F2 R2 U",
                "(y') R2 F2 U R U R' U' R' U' F2 R' U R'",
                "F U F' L' F U2 F' U2 F' L F U F U2 F' U'",
                "(y') R U R' F' R U2 R' U2 R' F R U R U2 R' U'",
                "R U2 R' U' R' F' R U2 R U2 R' F R U' R' U",
                "L' U' L U2 L U2 R' L2 U L U' L R U2 L' U2",
                "(y2) R' U' R U2 R U2 L' R2 U R U' R L U2 R' U2",
                "R U2 R D R' U R D' R' U' R' U R U R' U",
                "F U' F' U' F U F D F' U' F D' F' U2 F' U'",
                "(y') R U' R' U' R U R D R' U' R D' R' U2 R'",
                "B' L' U' L B' L' U B' U' B' U B L B2",
                "(y x') R' U' F' U R' U' (x) U R' U' R' U R B R2",
                "R U2 R' U B L' B' R B L B' U R' U",
                "R U2 R' U (y) R B' R' F R B R' (z x) R U' (x' z')",
                "L U2 L2 B L B' L U2 L' F' L' U L U L' U' L F",
                "(y2) R U2 l' R' U R U' l U2 R' B' R' U R U R' U' R B",
                "R U2 R D R' U R D' R' U' R' U R U R' U");

        AddAlg(this.PLLs,"Rb",
                "R-PLL b",
                "PLL, ZBLL",
                "R' U2 R U2 R' F (R U R' U') R' F' R2' U'",
                "R' U2 R U2 R' F (R U R' U') l' U' R2 (x')",
                "(z') U' L2 U L2 U' F U L U' L' U' F' U2 (z)",
                "R' U2 R U2 R' F R U R' U' R' F' R2",
                "(y) R2 F R U R U' R' F' R U2 R' U2 R",
                "(y) R2 F R U R U' R' F' R U2 R' U2 R",
                "B2 R B U B U' B' R' B U2 B' U2 B",
                "(y x) R2 U l U R U' l' U' l U2 R' U2 R",
                "(y') r' L' U r U L U' r' U' r U2 L' U2 L",
                "B2 L2 U' B' U' B U B U L2 B U' B U",
                "R' U R' B2 U' R' U' R' U R U B2 R2",
                "(y) R2 B2 U' R' U' R U R U B2 R U' R",
                "B' U' B L B' U2 B U2 B L' B' U' B' U2 B U",
                "(y) R' U' R B R' U2 R U2 R B' R' U' R' U2 R",
                "R' U2 R U R B R' U2 R' U2 R B' R' U R U'",
                "L U L' U2 L' U2 R L2 U' L' U L' R' U2 L U2",
                "(y2) R U R' U2 R' U2 L R2 U' R' U R' L' U2 R",
                "R' U2 R' D' R U' R' D R U R U' R' U' R U'",
                "B' U B U B' U' B' D' B U B' D B U2 B U",
                "(y) R' U R U R' U' R' D' R U R' D R U2 R",
                "F L U L' F L U' F U F U' F' L' F2",
                "(y' x) R U B U' R U (x') U' R U R U' R' F' R2",
                "R' U2 R U' F' L F R' F' L' F U' R U'",
                "R' U2 R U' (y') R' F R B' R' F' R (z x') R' U (x z')",
                "L' U2 L2 F' L' F L' U2 L B L U' L' U' L U L' B'",
                "(y2) R' U2 l R U' R' U l' U2' R F R U' R' U' R U R' F'",
                "R' U2 R' D' R U' R' D R U R U' R' U' R U'",
                "(y') (R U2 R' U' R U' R')(R U R' U' R' F R2 U' R' U' R U R' F')(R U R' U R U2 R')");

        AddAlg(this.PLLs,"T",
                "T-PLL",
                "PLL, ZBLL, ZZLL, BLD",
                "R U R' U' R' F R2 U' R' U' R U R' F'",
                "F R U' R' U R U R2 F' R U R U' R'",
                "(y2) B L U' L' U L U L2 B' L U L U' L'",
                "R' U' R U R B' R2 U R U R' U' R B",
                "(y2) L' U' L U L F' L2 U L U L' U' L F",
                "R2 U R2 U' R2' U' D R2 U' R2' U R2 D'",
                "R2 U R2' U' R2 U' D R2' U' R2 U R2' D'",
                "R2 U' R2 D B2 L2 U L2 D' B2 U",
                "(y2) L2 U' L2 D F2 R2 U R2 D' F2",
                "R2 U' R2 D B2 L2 U L2 D' B2",
                "R2 D' F2 U F2 R2 D B2 U' B2 U",
                "R2' u' R2 U R2' (y) R2 u R2' U' R2",
                "R2 D' F2 D R2 B2 D L2 D' B2 U",
                "(y2 z) U2 r' U2 r U2 (x) U2 r U2 r' U2 (z')",
                "R U R' U' R2 D R' U' R' U' R U R2 D' R",
                "R U R' U' R2 D R' U' R' U' R U (z') U2 R' U (z)",
                "R2 U R2 U' R2 F2 U' F2 D R2 D'",
                "F' U F' L2 B D' B' L2 F2 U' S' U2 S U2",
                "y' L U' r U2 l' U l U2 x r2' (U M U2 M')",
                "y x r' U r' d2 r U' r' d2 r2 x' U' M' U2 M",
                "R U R' U' R' F R F' R' F R F' U' F' U F U'",
                "(R U R' U') (R' F R F')2 (y') (x') F' (R' F R F') (x) (y)");

        AddAlg(this.PLLs,"V",
                "V-PLL",
                "PLL, ZBLL",
                "R' U R' U' B' R' B2 U' B' U B' R B R",
                "R' U R' d' R' F' R2 U' R' U R' F R F",
                "R' U R' (y) U' R' F' R2 U' R' U R' F R F",
                "R' U R' U' (y x) R' U' R2 B' R' B R' U R U (x')",
                "R' U R' U' (y x) R' U' R2 (x') U' R' U R' F R F",
                "R' U R' U' (y) R' F' R2 U' R' U R' F R F",
                "R' U R' U' B' D B' D' B2 R' B' R B R",
                "R' U R' U' (y x) R' F R' F' R2 U' R' U R U (x')",
                "R' U R' U' (x2 y') R' U R' U' l R U' R' U R U (x')",
                "R' U R' U' (x' y) U' R U' R' U2 (y') R' U' R U R (x)",
                "R' U R' U' (y) R' D R' D' R2 F' R' F R F",
                "R' U2 R U2 L U' R' U L' U L U' R U L'",
                "R' U2 R U2 L U' R' U r' F r U' R U L'",
                "R2 U' (B2 U B2) (R D') (R D) R' U R U' R",
                "F' U B U' F U F' U B' U' F U2 B U2 B'",
                "(y') R' U L U' R U R' U L' U' R U2 L U2 L'",
                "(y) r' F R F' r U r' F R' F' r U2 R U2 R'",
                "(y) L' U R U' L U L' U R' U' L U2 R U2 R'",
                "(y z) U' R D R' U R U' R D' R' U R2 D R2 D' (z')",
                "L U' R' U L' U' L U' R U L' U2 R' U2 R",
                "(y2) R U' L' U R' U' R U' L U R' U2 L' U2 L",
                "R U2 R' D R U' R U' R U R2 D R' U' R D2",
                "(y) R U' R U (y) L D' L D L2 (y') R F R' F' R'");

        AddAlg(this.PLLs,"Y",
                "Y-PLL",
                "PLL, ZBLL, BLD",
                "F R U' R' U' R U R' F' R U R' U' R' F R F'",
                "R' U' R F2 R' U R U F2 U' F2 U' F2",
                "R' U' R F2 R' U R d R2 U' R2' U' R2",
                "R2 U' R2 U' R2 U F U F' R2 F U' F'",
                "R2 U' R2 U' R2 d R U R' B2 R U' R'",
                "(y2 z) U2 R' U2 R' U2 R B R B' U2 B R' B' (z')",
                "F2 D R2 U R2 D' R' U' R F2 R' U R",
                "(y') R2 u R2' U R2 D' R' U' R F2' R' U R",
                "F R' F R2 U' R' U' R U R' F' R U R' U' F'",
                "F R' F' R U R U' R2 U' R U R B' R' B U",
                "F R' F' R U R U' R2 U' R U l U' R' U (x)",
                "F R U' R' U' R U F U F' R' F U' F2",
                "F R U' R' U' R d R U R' B' R U' R2",
                "R' F R F' U' F' U F2 U F' U' F' L F L' U'",
                "R' F R F' (y') U' R' U R2 U R' U' R' F R F'",
                "R' F' U F U F' U' F R F' U' F U F R' F' R",
                "(y) F' L' U L U L' U' L F L' U' L U L F' L' F",
                "F2 U F U' F' U L F R' F R F L' F'",
                "(y z) U2 R U R' U' R (y) R U L' U L U R' U' (x)",
                "R2 U' R' U R U' B' R' F R' F' R' B R",
                "(z') U2 L' U' L U L' (y') L' U' R U' R' U' L U (x)",
                "R2 U' R' U R U' (z' y') L' U' R U' R' U' L U (y z)",
                "F R U' R' F D R' B' R' B R2 D' F2",
                "F R U' R' F D R' (y x) R' U' R (z) R2 (y) L' d2 (z)",
                "R' U' R2 U' L U2 R' U R U2 L' R' U R' U R",
                "(y2 z) U' R' U2 R' D R2 U' R U R2 U' D' R U' R U (z')",
                "F R F' U' F R' F' R B' R2 B R' U' R2 U",
                "(y) r U r' U' r U' r' (y') l U' R2 U l' U' R2",
                "U F' L F L' U' L' U L U2 R U R' U' R' F R F'");
    }

    private void AddPLLGroups() {
    }

    private void AddAlg(ArrayList<Alg> arr, String id, String name, String usedIn, String... entries) {
        Alg alg = new Alg(id, name, usedIn);
        for (String entry : entries) {
            alg.Entries.add(entry);
        }
        arr.add(alg);
    }

    private void AddAlgGroup(ArrayList<AlgGroup> arr, String name, String... entries) {
        AlgGroup algGroup = new AlgGroup(name);
        for (String entry : entries) {
            algGroup.Entries.add(entry);
        }
        arr.add(algGroup);
    }

}

